<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (c) 2016-2017, The Linux Foundation. All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are
    met:
        * Redistributions of source code must retain the above copyright
          notice, this list of conditions and the following disclaimer.
        * Redistributions in binary form must reproduce the above
          copyright notice, this list of conditions and the following
          disclaimer in the documentation and/or other materials provided
          with the distribution.
        * Neither the name of The Linux Foundation nor the names of its
          contributors may be used to endorse or promote products derived
          from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
    WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
    ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
    BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
    BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
    OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
    IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE
-->
<resources>
   <!-- List of regexpressions describing the interface (if any) that represent tetherable
          Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
          should be empty.  An example would be "softap.*" -->
   <string-array translatable="false" name="config_tether_wifi_regexs">
       <item>"softap0"</item>
       <item>"wigig0"</item>
       <item>"wifi_br0"</item>
   </string-array>

    <!-- Disable apps built from userdebug vendor image -->
    <string-array name="config_disableApksUnlessMatchedSku_apk_list" translatable="false">
        <item>com.qualcomm.qti.biometrics.fingerprint.qfpcalibration</item>
        <item>com.qualcomm.qti.sensors.qsensortest</item>
        <item>com.qualcomm.qti.usta</item>
    </string-array>

    <!-- The default refresh rate for a given device. Change this value to set a higher default
     refresh rate. If the hardware composer on the device supports display modes with a higher
     refresh rate than the default value specified here, the framework may use those higher
     refresh rate modes if an app chooses one by setting preferredDisplayModeId or calling
     setFrameRate().
     If a non-zero value is set for config_defaultPeakRefreshRate, then
     config_defaultRefreshRate may be set to 0, in which case the value set for
     config_defaultPeakRefreshRate will act as the default frame rate. -->
    <integer name="config_defaultRefreshRate">0</integer>

    <!-- The default peak refresh rate for a given device. -->
    <integer name="config_defaultPeakRefreshRate">120</integer>

    <!-- default refresh rate in the zone defined by brightness and ambient thresholds -->
    <integer name="config_defaultRefreshRateInZone">120</integer>

    <!-- Default refresh rate while the device has high brightness mode enabled for HDR. -->
    <integer name="config_defaultRefreshRateInHbmHdr">60</integer>

    <!-- Not allow to switch to higher refresh rate when (display, ambient) brightness falls into
         the region defined by the two arrays -->
    <integer-array name="config_brightnessThresholdsOfPeakRefreshRate">
        <item>-1</item>
    </integer-array>
    <integer-array name="config_ambientThresholdsOfPeakRefreshRate">
        <item>-1</item>
    </integer-array>

</resources>
